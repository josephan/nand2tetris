function Screen.init 0
push constant 0
not
pop static 0
push constant 0
return
function Screen.clearScreen 2
push constant 16384
pop local 0
push constant 24576
pop local 1
label WHILE_EXP0
push local 0
push local 1
lt
not
if-goto WHILE_END0
push local 0
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 0
push constant 0
return
function Screen.modifyBit 1
push constant 1
push argument 1
call Screen.bitShift 2
pop local 0
push argument 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push local 0
or
return
goto IF_END0
label IF_FALSE0
push argument 0
push local 0
not
and
return
label IF_END0
function Screen.bitShift 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 1
lt
not
if-goto WHILE_END0
push argument 0
push argument 0
add
pop argument 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push argument 0
return
function Screen.drawPixel 4
push argument 0
push constant 16
call Math.divide 2
pop local 2
push constant 16384
push constant 32
push argument 1
call Math.multiply 2
add
push local 2
add
pop local 0
push local 0
call Memory.peek 1
pop local 1
push argument 0
push local 2
push constant 16
call Math.multiply 2
sub
pop local 3
push local 1
push local 3
push static 0
call Screen.modifyBit 3
pop local 1
push local 0
push local 1
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawLine 11
push argument 0
pop local 0
push argument 1
pop local 1
push argument 2
push argument 0
gt
pop local 9
push argument 3
push argument 1
gt
pop local 10
push argument 2
push argument 0
sub
call Math.abs 1
pop local 2
push argument 3
push argument 1
sub
call Math.abs 1
pop local 3
push constant 0
pop local 4
push constant 0
pop local 5
push constant 0
pop local 6
push argument 1
push argument 3
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
label WHILE_EXP0
push local 4
push local 2
lt
push local 4
push local 2
eq
or
not
if-goto WHILE_END0
push local 9
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push local 4
add
pop local 7
goto IF_END1
label IF_FALSE1
push local 0
push local 4
sub
pop local 7
label IF_END1
push local 7
push argument 1
call Screen.drawPixel 2
pop temp 0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
label IF_FALSE0
label WHILE_EXP1
push local 4
push local 2
lt
push local 4
push local 2
eq
or
push local 5
push local 3
lt
push local 5
push local 3
eq
or
and
not
if-goto WHILE_END1
push local 9
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push local 4
add
pop local 7
goto IF_END2
label IF_FALSE2
push local 0
push local 4
sub
pop local 7
label IF_END2
push local 10
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
push local 5
add
pop local 8
goto IF_END3
label IF_FALSE3
push local 1
push local 5
sub
pop local 8
label IF_END3
push local 7
push local 8
call Screen.drawPixel 2
pop temp 0
push local 6
push constant 0
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 4
push constant 1
add
pop local 4
push local 6
push local 3
add
pop local 6
goto IF_END4
label IF_FALSE4
push local 5
push constant 1
add
pop local 5
push local 6
push local 2
sub
pop local 6
label IF_END4
goto WHILE_EXP1
label WHILE_END1
push constant 0
return
function Screen.drawRectangle 1
push argument 1
pop local 0
label WHILE_EXP0
push local 0
push argument 3
lt
push local 0
push argument 3
eq
or
not
if-goto WHILE_END0
push argument 0
push local 0
push argument 2
push local 0
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 6
push argument 2
push constant 181
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 2
neg
pop local 0
label WHILE_EXP0
push local 0
push argument 2
lt
push local 0
push argument 2
eq
or
not
if-goto WHILE_END0
push argument 2
push argument 2
call Math.multiply 2
push local 0
push local 0
call Math.multiply 2
sub
call Math.sqrt 1
pop local 5
push argument 0
push local 5
sub
pop local 1
push argument 1
push local 0
add
pop local 3
push argument 0
push local 5
add
pop local 2
push argument 1
push local 0
add
pop local 4
push local 1
push local 3
push local 2
push local 4
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
